// Generated by CoffeeScript 1.7.1
(function() {
  var MULTIMIX, TRM, alert, badge, debug, echo, help, info, log, module, name, njs_path, nr, rainbow, route, route_info, route_infos, rpr, warn, whisper, π, _i, _len;

  njs_path = require('path');

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = '﴾main﴿';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  whisper = TRM.get_logger('whisper', badge);

  alert = TRM.get_logger('alert', badge);

  debug = TRM.get_logger('debug', badge);

  warn = TRM.get_logger('warn', badge);

  help = TRM.get_logger('help', badge);

  echo = TRM.echo.bind(TRM);

  rainbow = TRM.rainbow.bind(TRM);

  this["new"] = require('./new');

  this._loader = require('./LOADER');

  MULTIMIX = require('coffeenode-multimix');

  π = require('coffeenode-packrattle');

  this.or = π.alt;

  this.chain = π.chain;

  this.check = π.check;

  this.commit = π.commit;

  this.consume = π.consume;

  this.drop = π.drop;

  this.end = π.end;

  this.not_ = π.not_;

  this.optional = π.optional;

  this.parse = π.parse;

  this.reduce = π.reduce;

  this.regex = π.regex;

  this.reject = π.reject;

  this.repeat = π.repeat;

  this.repeatIgnore = π.repeatIgnore;

  this.repeatSeparated = π.repeatSeparated;

  this.seq = π.seq;

  this.seqIgnore = π.seqIgnore;

  this.string = π.string;

  this.succeed = π.succeed;

  route_infos = this._loader.get_route_infos();

  for (_i = 0, _len = route_infos.length; _i < _len; _i++) {
    route_info = route_infos[_i];
    route = route_info.route, name = route_info.name, nr = route_info.nr;
    if (this[name] != null) {
      throw new Error("duplicate module " + route + ":\nname " + (rpr(name)) + " already in use");
    }
    module = require(route);
    this[name] = MULTIMIX.bundle(module);
  }

}).call(this);
