// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = {
    escodegen: {
      format: {
        indent: {
          style: '  ',
          base: 0,
          adjustMultilineComment: true
        },
        newline: '\n',
        space: ' ',
        json: false,
        renumber: false,
        hexadecimal: false,
        quotes: 'auto',
        escapeless: false,
        compact: false,
        parentheses: true,
        semicolons: true
      },
      parse: null,
      comment: false,
      sourceMap: void 0,
      sourceMapRoot: void 0,
      sourceMapWithCode: void 0,
      sourceContent: void 0,
      directive: false,
      verbatim: 'x-verbatim'
    },
    parserapi: {

      /* extracted from https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API */
      dependencies: ['ArrayExpression < Expression', 'ArrayPattern < Pattern', 'ArrowExpression < Function, Expression', 'AssignmentExpression < Expression', 'BinaryExpression < Expression', 'BlockStatement < Statement', 'BreakStatement < Statement', 'CallExpression < Expression', 'CatchClause < Node', 'ComprehensionBlock < Node', 'ComprehensionExpression < Expression', 'ConditionalExpression < Expression', 'ContinueStatement < Statement', 'DebuggerStatement < Statement', 'Declaration < Statement', 'DoWhileStatement < Statement', 'EmptyStatement < Statement', 'Expression < Node, Pattern', 'ExpressionStatement < Statement', 'ForInStatement < Statement', 'ForOfStatement < Statement', 'ForStatement < Statement', 'Function < Node', 'FunctionDeclaration < Function, Declaration', 'FunctionExpression < Function, Expression', 'GeneratorExpression < Expression', 'GraphExpression < Expression', 'GraphIndexExpression < Expression', 'Identifier < Node, Expression, Pattern', 'IfStatement < Statement', 'LabeledStatement < Statement', 'LetExpression < Expression', 'LetStatement < Statement', 'Literal < Node, Expression', 'LogicalExpression < Expression', 'MemberExpression < Expression', 'NewExpression < Expression', 'Node', 'ObjectExpression < Expression', 'ObjectPattern < Pattern', 'Pattern < Node', 'Position', 'Program < Node', 'ReturnStatement < Statement', 'SequenceExpression < Expression', 'SourceLocation', 'Statement < Node', 'SwitchCase < Node', 'SwitchStatement < Statement', 'ThisExpression < Expression', 'ThrowStatement < Statement', 'TryStatement < Statement', 'UnaryExpression < Expression', 'UpdateExpression < Expression', 'VariableDeclaration < Declaration', 'VariableDeclarator < Node', 'WhileStatement < Statement', 'WithStatement < Statement', 'XML < Node', 'XMLAnyName < Expression', 'XMLAttribute < XML', 'XMLAttributeSelector < Expression', 'XMLCdata < XML', 'XMLComment < XML', 'XMLDefaultDeclaration < Declaration', 'XMLElement < XML, Expression', 'XMLEndTag < XML', 'XMLEscape < XML', 'XMLFilterExpression < Expression', 'XMLFunctionQualifiedIdentifier < Expression', 'XMLList < XML, Expression', 'XMLName < XML', 'XMLPointTag < XML', 'XMLProcessingInstruction < XML', 'XMLQualifiedIdentifier < Expression', 'XMLStartTag < XML', 'XMLText < XML', 'YieldExpression < Expression']
    }
  };

}).call(this);
